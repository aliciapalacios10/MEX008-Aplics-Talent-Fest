{"version":3,"sources":["img/clip-1.png","img/clip-done.png","serviceWorker.js","components/Firebase/context.jsx","components/Firebase/firebase.jsx","components/Firebase/index.jsx","components/SignOut/index.jsx","constants/routes.jsx","components/Session/context.jsx","components/Session/withAuthentication.jsx","components/Session/withAutorization.jsx","components/Navigation/index.jsx","components/Landing/index.jsx","components/SignUp/index.jsx","components/SignIn/index.jsx","components/Database/Requisicion.js","components/Home/index.jsx","components/Account/index.jsx","components/Admin/index.jsx","components/New/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseLogin","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","apps","length","app","initializeApp","firebaseConf","type","onClick","HOME","NEW","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","this","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Account","className","src","ImgWelcome","INITIAL_STATE","firstName","lastName","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpLink","id","SignUpForm","SignUpPage","SignInFormBase","SignInForm","SignInPage","Requisicion","form","alert","alertData","setTimeout","refs","contactForm","reset","e","params","inputName","department","inputDepartment","area","inputArea","contract","inputContract","number","inputNumber","job","inputJob","replacement","inputReplacement","scholarship","inputScholarship","language","inputLanguage","travel","inputTravel","experience","inputExperience","place","inputPlace","workingHours","inputWorkingHours","salary","inputSalary","approved","inputApproved","textAreaMessage","console","log","database","ref","showAlert","resetForm","role","style","padding","sendMessage","bind","htmlFor","rows","AdminPage","loading","users","on","snapshot","usersObject","val","usersList","Object","keys","map","key","uid","off","UserList","user","username","New","ImgDone","exact","path","component","LandingPage","HomePage","AccountPage","ReactDOM","render","Firebase","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c3c5b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clip-1.e913f34a.png\";","module.exports = __webpack_public_path__ + \"static/media/clip-done.b1616ec5.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\n\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;\r\n","import { Component } from 'react';\r\nimport app from 'firebase/app';\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\nclass FirebaseLogin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (!firebase.apps.length) {\r\n      app.initializeApp(config);\r\n    }\r\n\r\n\r\n    this.auth = app.auth();\r\n  }\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n}\r\n\r\n\r\n\r\nexport default FirebaseLogin;\r\nexport const firebaseConf = firebase.initializeApp(config);","import FirebaseContext, { withFirebase } from './context';\r\nimport FirebaseLogin from './firebase';\r\n\r\nexport default FirebaseLogin;\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/requisicion1';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const NEW = '/home';\r\nexport const REQUISICION_FORM = '/requisicion';\r\n// export const PASSWORD_FORGET = '/pw-forget';\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n\r\n","import React from 'react';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { AuthUserContext } from '../Session';\r\n\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>);\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {/* <li>\r\n      <Link to={ROUTES.ADMIN}>Admin</Link>\r\n    </li> */}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.NEW}>NEW</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nimport ImgWelcome from '../../img/clip-1.png';\r\n// import Navigation from '../Navigation';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst Account = () => (\r\n  <div className=\"landing\">\r\n    <div className=\"information-signin\">\r\n      <h1 className=\"logo\" >AFFINITY</h1>\r\n      <h4 className=\"slogan\" > Mejores procesos en RH </h4> &nbsp;\r\n      <button className=\"btn-welcome\">\r\n        <Link className=\"btn-login\" to={ROUTES.SIGN_IN}>Comenzar</Link>\r\n      </button>\r\n    </div>\r\n\r\n    <img className=\"img-welcome\" src={ImgWelcome} />\r\n  </div>\r\n);\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport './SignUp.css';\r\n\r\nconst SignUpPage = () => (\r\n\t<div className=\"section-signUp\">\r\n\t\t<h1 className=\"title-align\" >Registro</h1>\r\n\t    <SignUpForm />\r\n\t</div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    firstName: '',\r\n    lastName:'',\r\n\temail: '',\r\n\tpasswordOne: '',\r\n\tpasswordTwo: '',\r\n\terror: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\tonSubmit = event => {\r\n        const { email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n    };\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\trender() {\r\n\t\tconst { firstName, lastName, email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || firstName === ''\r\n        || lastName === '';\r\n\r\n\t\treturn (\r\n\t\t\t<form className=\"form-signUp\" onSubmit={this.onSubmit}>\r\n\t\t\t\t<input className=\"style-signUp\" name=\"firstName\" value={firstName} onChange={this.onChange} type=\"text\" placeholder=\"Nombre\" />\r\n                <input className=\"style-signUp\" name=\"lastName\" value={lastName} onChange={this.onChange} type=\"text\" placeholder=\"Apellidos\" />\r\n\r\n\t\t\t\t<input className=\"style-signUp\" name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo Electrónico\" />\r\n\t\t\t\t<input className=\"style-signUp\"\r\n\t\t\t\t\tname=\"passwordOne\"\r\n\t\t\t\t\tvalue={passwordOne}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input className=\"style-signUp\"\r\n\t\t\t\t\tname=\"passwordTwo\"\r\n\t\t\t\t\tvalue={passwordTwo}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Confirmar Contraseña\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn-signUp\" disabled={isInvalid} type=\"submit\">Regístrate</button>\r\n\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\nconst SignUpLink = () => (\r\n\t<p id=\"sign-up\">\r\n\t\tSolicita tu cuenta <Link to={ROUTES.SIGN_UP}> aquí</Link>\r\n\t</p>\r\n);\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport './SignIn.scss';\r\n\r\n\r\nconst SignInPage = () => (\r\n    <div>\r\n        <SignInForm/>\r\n        \r\n    </div>\r\n)\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n}\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...INITIAL_STATE};\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password} = this.state;\r\n \r\n        this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.NEW);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n        \r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      };\r\n\r\n      render() {\r\n        const { email, password, error } = this.state;\r\n        const isInvalid = password === '' || email === '';\r\n        return (\r\n          <form onSubmit={this.onSubmit}>\r\n            {/* <input\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Email Address\"\r\n            /> */}\r\n            {/* <input\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <button id=\"button1\" disabled={isInvalid} type=\"submit\">\r\n              Sign In\r\n            </button>\r\n            {error && <p>{error.message}</p>} */}\r\n            <div className=\"container\"onClick>\r\n            <div className=\"top\">\r\n              <div className=\"bottom\">\r\n                <div className=\"center\">\r\n                  <h2>Por favor, inicia sesión</h2> &nbsp;\r\n                  <input\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Ingresa tu correo electrónico\"\r\n            />\r\n                  <input\r\n                  name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Ingresa tu contraseña\"/>\r\n              <p id=\"get-password\">¿Olvidaste tu contraseña?</p> &nbsp;\r\n              <button id=\"sign-in-button\">¡Comencemos!</button> &nbsp;\r\n              {error && <p id=\"error-txt\"> Upss, necesitamos registrarte primero</p>}\r\n               <SignUpLink/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            </form>\r\n            \r\n        );\r\n      }\r\n}\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(SignInFormBase);\r\n\r\n  \r\n  export default SignInPage;\r\n  export { SignInForm };","// import React from 'react';\r\nimport React, { Component } from 'react';\r\nimport {firebaseConf} from '../Firebase/firebase';\r\n\r\nclass Requisicion extends Component {\r\n\r\n    // inicializamos nuestro estado inicial\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        form: [],\r\n        alert: false,\r\n        alertData: {}\r\n      };\r\n    }\r\n\r\n    // Mostrar una alerta cuando se envia el formulario\r\n    showAlert(type, message) {\r\n      this.setState({\r\n        alert: true,\r\n        alertData: { type, message }\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ alert: false });\r\n      }, 4000)\r\n    }\r\n\r\n    // Con esta funcion borramos todos los elementos del formulario\r\n    resetForm() {\r\n      this.refs.contactForm.reset();\r\n    }\r\n\r\n    // Funcion para enviar la informacion del formulario a Firebase Database\r\n    sendMessage(e) {\r\n      // Detiene la acción predeterminada del elemento\r\n      e.preventDefault();\r\n\r\n      // Creamos un objeto con los valores obtenidos de los inputs\r\n      const params = {\r\n        name: this.inputName.value,\r\n        department: this.inputDepartment.value,\r\n        area: this.inputArea.value,\r\n        contract: this.inputContract.value,\r\n        number: this.inputNumber.value,\r\n        job: this.inputJob.value,\r\n        replacement: this.inputReplacement.value,\r\n        scholarship: this.inputScholarship.value,\r\n        language: this.inputLanguage.value,\r\n        travel: this.inputTravel.value,\r\n        experience: this.inputExperience.value,\r\n        place: this.inputPlace.value,\r\n        workingHours: this.inputWorkingHours.value,\r\n        salary: this.inputSalary.value,\r\n        approved: this.inputApproved.value,\r\n        message: this.textAreaMessage.value\r\n      };\r\n\r\n      // Validamos que no se encuentren vacios los principales elementos de nuestro formulario\r\n      if (params.name && params.department && params.area && params.contract && params.number && params.job && params.replacement\r\n        && params.scholarship && params.language && params.travel && params.experience && params. place && params. workingHours \r\n        && params.salary && params.approved &&params.message) {\r\n        // enviamos nuestro objeto \"params\" a firebase database\r\n        console.log(firebaseConf.auth().currentUser)\r\n        firebaseConf.database().ref('paramsform').push(params).then(() => {\r\n          // Si todo es correcto, actualizamos nuestro estado para mostrar una alerta.\r\n          this.showAlert('success', 'Your message was sent successfull');\r\n        }).catch((e) => {\r\n          // Si ha ocurrido un error, actualizamos nuestro estado para mostrar el error \r\n          console.error(e);\r\n          this.showAlert('danger', 'Your message could not be sent');\r\n        });\r\n        // limpiamos nuestro formulario llamando la funcion resetform\r\n        this.resetForm();\r\n      } else {\r\n        // En caso de no llenar los elementos necesario despliega un mensaje de alerta\r\n        this.showAlert('warning', 'Please fill the form');\r\n      };\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          {this.state.alert && <div className={`alert alert-${this.state.alertData.type}`} role='alert'>\r\n            <div className='container'>\r\n              {this.state.alertData.message}\r\n            </div>\r\n          </div>}\r\n          <div className='container' style={{ padding: `40px 0px` }}>\r\n            <div >\r\n                <h2>FORMULARIO REQUISICIONES</h2> \r\n\r\n                <form onSubmit={this.sendMessage.bind(this)} ref='contactForm' >\r\n\r\n                  <h4>Datos relevantes del puesto</h4>\r\n                  <div>\r\n                    <label htmlFor='name'>Nombre del puesto</label>\r\n                    <input type='text'  id='name' \r\n                      placeholder='Name' ref={name => this.inputName = name} />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='department'>Departamento</label>\r\n                    <input type='text'  id='department' \r\n                      placeholder='Department' ref={department => this.inputDepartment = department} />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='area'>Jefe de área</label>\r\n                    <input type='text'  id='area' \r\n                      placeholder='Nombre' ref={area => this.inputArea = area} />\r\n                  </div>\r\n\r\n                  <div >\r\n                    <label htmlFor='contract'>Tipo de contrato</label>\r\n                    <select  id='contract' ref={contract => this.inputContract = contract}>\r\n                      <option value='Definido'>Definido</option>\r\n                      <option value='Indefinico'>Indefinido</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='number'>Número de vacantes</label>\r\n                    <input type='number'  id='number' \r\n                      placeholder='No.' ref={number => this.inputNumber = number}/>\r\n                  </div>\r\n\r\n                  <div >\r\n                    <label htmlFor='job'>Tipo de puesto</label>\r\n                    <select  id='job' ref={job => this.inputJob = job}>\r\n                      <option value='Nuevo'>Nuevo</option>\r\n                      <option value='Remplazo'>Remplazo</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='replacement'>Remplaza a:</label>\r\n                    <input type='text'  id='replacement' \r\n                      placeholder='Nombre' ref={replacement => this.inputReplacement = replacement} />\r\n                  </div>\r\n\r\n                  <h4>Requisitos que debe cubrir</h4>\r\n                  <div>\r\n                    <label htmlFor='scholarship'>Escolaridad</label>\r\n                    <input type='text'  id='scholarship' \r\n                      placeholder='Escolaridad' ref={scholarship => this.inputScholarship = scholarship} />\r\n                  </div>\r\n\r\n                  <div >\r\n                    <label htmlFor='language'>Idioma</label>\r\n                    <select  id='language' ref={language => this.inputLanguage = language}>\r\n                      <option value='Español'>Español</option>\r\n                      <option value='Ingles'>Inglés</option>\r\n                      <option value='Otro'>Otro</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div >\r\n                    <label htmlFor='travel'>Disponivilidad para viajar</label>\r\n                    <select  id='travel' ref={travel => this.inputTravel = travel}>\r\n                      <option value='Si'>Si</option>\r\n                      <option value='No'>No</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='experience'>Experiencia</label>\r\n                    <input type='text'  id='experience' \r\n                      placeholder='Experiencia' ref={experience => this.inputExperience = experience} />\r\n                  </div>\r\n\r\n                  <h4>Condiciones de trabajo</h4>\r\n                  <div>\r\n                    <label htmlFor='place'>Lugar de trabajo</label>\r\n                    <input type='text'  id=' place' \r\n                      placeholder='Lugar' ref={ place => this.inputPlace =  place} />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='workingHours'>Horario</label>\r\n                    <input type='text'  id='workingHours' \r\n                      placeholder='Hora' ref={ workingHours => this.inputWorkingHours =  workingHours} />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='salary'>Sueldo</label>\r\n                    <input type='text'  id='salary' \r\n                      placeholder='Cantidad' ref={salary => this.inputSalary = salary} />\r\n                  </div>\r\n\r\n                  <h4>Aprobación</h4>\r\n                  <div >\r\n                    <label htmlFor='approved'>La requisición es:</label>\r\n                    <select  id='approved' ref={approved => this.inputApproved = approved}>\r\n                      <option value='Aprobada'>Aprobada</option>\r\n                      <option value='Rechazada'>Rechazada</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor='message'>Comentarios</label>\r\n                    <textarea className='form-control' id='message' \r\n                      rows='3' ref={message => this.textAreaMessage = message}>\r\n                    </textarea>\r\n                  </div> \r\n\r\n                  <button type='submit' className='btn btn-primary'>Send</button>\r\n                </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Requisicion;","import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\nimport Requisicion from '../Database/Requisicion';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n    <h1>Home</h1>\r\n <Requisicion />\r\n\r\n  </div>\r\n);\r\nconst condition = authUser => !!authUser;\r\n\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n//   <div className=\"home-bground\">\r\n//       <h1 id=\"home-title\">Recursos humanos</h1>\r\n//     <div className=\"section-home\">\r\n//       <div className=\"home-buttons-container\">\r\n//           <button className=\"home-buttons\">Solicitud de posición</button>\r\n//           <button className=\"home-buttons\">Cartera de posiciones</button>\r\n//           <button className=\"home-buttons\">Requisiciones</button>\r\n//           <button className=\"home-buttons\">Cartera de postulantes</button>\r\n//       </div>\r\n//       <img className=\"img-done\" src={ImgDone} />\r\n//     </div>\r\n\r\n//   </div>\r\n","import React from 'react';\r\n\r\nconst Account = () => (\r\n  <div>\r\n    <h1>Account</h1>\r\n  </div>\r\n);\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport ImgDone from '../../img/clip-done.png';\r\nimport './new.css';\r\n\r\nconst New = () => {\r\n    return (\r\n        <div className=\"home-bground\">\r\n        <h1 id=\"home-title\">Recursos humanos</h1>\r\n      <div className=\"section-home\">\r\n        <div className=\"home-buttons-container\">\r\n            <button className=\"home-buttons\">Solicitud de posición</button>\r\n            <button className=\"home-buttons\">Cartera de posiciones</button>\r\n            <button className=\"home-buttons\">Requisiciones</button>\r\n            <button className=\"home-buttons\">Cartera de postulantes</button>\r\n        </div>\r\n        <img className=\"img-done\" src={ImgDone} />\r\n      </div>\r\n  \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default New;","import React from 'react';\r\nimport { BrowserRouter as Router, Route,} from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\n// import PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n// import LandingRH from '../RecursosHumanos';\r\nimport New from '../New';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n    <Navigation/>\r\n      <hr />\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      {/* <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} /> */}\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n      <Route path={ROUTES.NEW} component={New} />\r\n      <Route path={ROUTES.REQUISICION_FORM} component={HomePage}/>\r\n    </div>\r\n  </Router>\r\n\r\n   );\r\n\r\n\r\n   export default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}